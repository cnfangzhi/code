// Top-level build file where you can add configuration options common to all sub-projects/modules.
buildscript {
    ext.versions = [
        compileSdk : 31,
        minSdk     : 26,
        targetSdk  : 30,
        versionCode: 1,
        versionName: "1.0",
        'androidTools': '31.0.0',
        'kotlin': '1.7.10',

        'butterknife': '10.2.3'
    ]

    ext.deps = [
        'androidx'    : [
            'appcompat'         : "androidx.appcompat:appcompat:1.3.1",
            'constraintlayout'  : "androidx.constraintlayout:constraintlayout:2.1.0",
            'core'              : "androidx.core:core:1.3.0",
            'corektx'          : "androidx.core:core-ktx:1.7.0",
            'test'              : [
                'junit'         : 'androidx.test.ext:junit:1.1.3',
                'espressoCore' : 'androidx.test.espresso:espresso-core:3.4.0',
                'runner'        : 'androidx.test:runner:1.3.1',
            ],
        ],

        material      : 'com.google.android.material:material:1.4.0',

        javapoet      : 'com.squareup:javapoet:1.13.0',
        junit         : 'junit:junit:4.13.2',
        'auto'        : [
            'service': 'com.google.auto.service:auto-service:1.0-rc4',
            'common' : 'com.google.auto:auto-common:0.10',
        ],

        'release'     : [
            'runtime' : "com.jakewharton:butterknife:${versions.butterknife}",
            'com_butterknife_compiler': "com.jakewharton:butterknife-com.butterknife.compiler:${versions.butterknife}"
        ],
        'kotlin'      : [
            'stdLibJdk8': "org.jetbrains.kotlin:kotlin-stdlib-jdk8:${versions.kotlin}",
        ]
    ]
    repositories {
        jcenter()
        mavenCentral()
        google()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:7.2.1'
        classpath 'org.jetbrains.kotlin:kotlin-gradle-plugin:1.7.10'
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

task A {
    println "configuration A"
    doFirst {
        println "doFirst A"
    }
}

task ("B") {
    println "configuration B"
    doLast {
        println "doLast B"
    }
}

task hello(dependsOn: [A, B]) {
    doLast {
        println "doLast hello"
    }
}
//A.dependsOn B
//A.mustRunAfter B
A.shouldRunAfter B

task finalized {
    doLast {
        println "清理任务"
    }
}
A.finalizedBy finalized



